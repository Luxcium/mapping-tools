{"version":3,"file":"getRejectedResults.js","sourceRoot":"","sources":["../../../src/helpers/tools/getRejectedResults.ts"],"names":[],"mappings":";;;AAAA,+CAAsD;AAEtD,qFAAkF;AAElF,YAAY;AAEZ,SAAgB,kBAAkB,CAChC,UAAuD;IAEvD,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAC9B,CAAC,IAAI,EAA+C,EAAE,CACpD,IAAI,CAAC,MAAM,KAAK,oBAAQ,CAC3B,CAAC;IACF,OAAO,IAAA,+DAA8B,EAAC,MAAM,CAAC,CAAC;AAChD,CAAC;AARD,gDAQC;AAED,gBAAgB;AACT,KAAK,UAAU,wBAAwB;IAC5C,OAAO,CAAC,GAAG,CAAC,iBAAiB,UAAU,EAAE,CAAC,CAAC;IAC3C,OAAO,CAAC,GAAG,CACT,kBAAkB,CAAC;QACjB;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;YACX,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IACF,OAAO,CAAC,GAAG,CACT,kBAAkB,CAAC;QACjB;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;YACZ,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IAEF,OAAO,CAAC,GAAG,CACT,kBAAkB,CAAC;QACjB;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;SACb;QACD;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;YACX,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;QACD;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;SACZ;QACD;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;YACZ,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IACF,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AA5DD,4DA4DC;AACD,8BAA8B","sourcesContent":["import { FULFILLED, REJECTED } from '../../constants';\nimport { Settled, SettledLeft } from '../../types';\nimport { converToIsometricSettledResult } from './converToIsometricSettledResult';\n\n/** @beta */\n\nexport function getRejectedResults<T>(\n  collection: Array<Settled<T> | PromiseSettledResult<T>>\n): SettledLeft[] {\n  const result = collection.filter(\n    (item): item is SettledLeft | PromiseRejectedResult =>\n      item.status === REJECTED\n  );\n  return converToIsometricSettledResult(result);\n}\n\n/** @internal */\nexport async function getRejectedResults_TEST_() {\n  console.log(`at: TEST from ${__filename}`);\n  console.log(\n    getRejectedResults([\n      {\n        status: FULFILLED,\n        value: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: null,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n  console.log(\n    getRejectedResults([\n      {\n        status: REJECTED,\n        reason: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: true,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n\n  console.log(\n    getRejectedResults([\n      {\n        status: REJECTED,\n        reason: null,\n      },\n      {\n        status: FULFILLED,\n        value: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: null,\n        recipeSteps: 0,\n        index: 0,\n      },\n      {\n        status: FULFILLED,\n        value: null,\n      },\n      {\n        status: REJECTED,\n        reason: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: true,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n  return void 0;\n}\n// getRejectedResults_TEST_();\n"]}