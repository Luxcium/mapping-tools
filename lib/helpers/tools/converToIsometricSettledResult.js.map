{"version":3,"file":"converToIsometricSettledResult.js","sourceRoot":"","sources":["../../../src/helpers/tools/converToIsometricSettledResult.ts"],"names":[],"mappings":";;;AAAA,+CAAsD;AAEtD,qEAAkE;AAWlE,SAAS,+BAA+B,CACtC,UAAuD;IAEvD,OAAO,UAAU,CAAC,GAAG,CAAC,+CAAsB,CAAC,CAAC;AAChD,CAAC;AAED,gBAAgB;AACT,KAAK,UAAU,oCAAoC;IACxD,OAAO,CAAC,GAAG,CAAC,iBAAiB,UAAU,EAAE,CAAC,CAAC;IAC3C,OAAO,CAAC,GAAG,CACT,+BAA+B,CAAC;QAC9B;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;YACX,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IACF,OAAO,CAAC,GAAG,CACT,+BAA+B,CAAC;QAC9B;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;YACZ,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IAEF,OAAO,CAAC,GAAG,CACT,+BAA+B,CAAC;QAC9B;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;SACb;QACD;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;YACX,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;QACD;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;SACZ;QACD;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;YACZ,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IACF,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AA5DD,oFA4DC;AACD,0CAA0C;AAE1C,YAAY;AACC,QAAA,8BAA8B,GAAG,+BAA+B,CAAC","sourcesContent":["import { FULFILLED, REJECTED } from '../../constants';\nimport { Settled, SettledLeft, SettledRight } from '../../types';\nimport { isometricSettledResult } from './isometricSettledResult';\n\nfunction converToIsometricSettledResult_(\n  collection: Array<SettledLeft | PromiseRejectedResult>\n): SettledLeft[];\nfunction converToIsometricSettledResult_<T>(\n  collection: Array<SettledRight<T> | PromiseSettledResult<T>>\n): SettledRight<T>[];\nfunction converToIsometricSettledResult_<T>(\n  collection: Array<Settled<T> | PromiseSettledResult<T>>\n): (SettledRight<T> | SettledLeft)[];\nfunction converToIsometricSettledResult_<T>(\n  collection: Array<Settled<T> | PromiseSettledResult<T>>\n): (SettledRight<T> | SettledLeft)[] {\n  return collection.map(isometricSettledResult);\n}\n\n/** @internal */\nexport async function converToIsometricSettledResult_TEST_() {\n  console.log(`at: TEST from ${__filename}`);\n  console.log(\n    converToIsometricSettledResult_([\n      {\n        status: FULFILLED,\n        value: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: null,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n  console.log(\n    converToIsometricSettledResult_([\n      {\n        status: REJECTED,\n        reason: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: true,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n\n  console.log(\n    converToIsometricSettledResult_([\n      {\n        status: REJECTED,\n        reason: null,\n      },\n      {\n        status: FULFILLED,\n        value: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: null,\n        recipeSteps: 0,\n        index: 0,\n      },\n      {\n        status: FULFILLED,\n        value: null,\n      },\n      {\n        status: REJECTED,\n        reason: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: true,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n  return void 0;\n}\n// converToIsometricSettledResult_TEST_();\n\n/** @beta */\nexport const converToIsometricSettledResult = converToIsometricSettledResult_;\n"]}