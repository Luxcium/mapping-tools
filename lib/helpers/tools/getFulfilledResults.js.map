{"version":3,"file":"getFulfilledResults.js","sourceRoot":"","sources":["../../../src/helpers/tools/getFulfilledResults.ts"],"names":[],"mappings":";;;AAAA,+CAAsD;AAEtD,qFAAkF;AAElF,YAAY;AACZ,SAAgB,mBAAmB,CACjC,UAAuD;IAEvD,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAC9B,CAAC,IAAI,EAAqC,EAAE,CAC1C,IAAI,CAAC,MAAM,KAAK,qBAAS,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,CACjE,CAAC;IAEF,OAAO,IAAA,+DAA8B,EAAC,MAAM,CAAC,CAAC;AAChD,CAAC;AATD,kDASC;AAED,gBAAgB;AACT,KAAK,UAAU,yBAAyB;IAC7C,OAAO,CAAC,GAAG,CAAC,iBAAiB,UAAU,EAAE,CAAC,CAAC;IAC3C,OAAO,CAAC,GAAG,CACT,mBAAmB,CAAC;QAClB;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;YACX,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IACF,OAAO,CAAC,GAAG,CACT,mBAAmB,CAAC;QAClB;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;YACZ,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IAEF,OAAO,CAAC,GAAG,CACT,mBAAmB,CAAC;QAClB;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;SACb;QACD;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;YACX,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;QACD;YACE,MAAM,EAAE,qBAAS;YACjB,KAAK,EAAE,IAAI;SACZ;QACD;YACE,MAAM,EAAE,oBAAQ;YAChB,MAAM,EAAE,IAAI;YACZ,CAAC,qBAAS,CAAC,EAAE,IAAI;YACjB,CAAC,oBAAQ,CAAC,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;YACtB,WAAW,EAAE,CAAC;YACd,KAAK,EAAE,CAAC;SACT;KACF,CAAC,CACH,CAAC;IACF,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AA5DD,8DA4DC;AACD,+BAA+B","sourcesContent":["import { FULFILLED, REJECTED } from '../../constants';\nimport { Settled, SettledRight } from '../../types';\nimport { converToIsometricSettledResult } from './converToIsometricSettledResult';\n\n/** @beta */\nexport function getFulfilledResults<T>(\n  collection: Array<Settled<T> | PromiseSettledResult<T>>\n): SettledRight<T>[] {\n  const result = collection.filter(\n    (item): item is PromiseFulfilledResult<T> =>\n      item.status === FULFILLED && typeof item.value !== 'undefined'\n  );\n\n  return converToIsometricSettledResult(result);\n}\n\n/** @internal */\nexport async function getFulfilledResults_TEST_() {\n  console.log(`at: TEST from ${__filename}`);\n  console.log(\n    getFulfilledResults([\n      {\n        status: FULFILLED,\n        value: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: null,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n  console.log(\n    getFulfilledResults([\n      {\n        status: REJECTED,\n        reason: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: true,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n\n  console.log(\n    getFulfilledResults([\n      {\n        status: REJECTED,\n        reason: null,\n      },\n      {\n        status: FULFILLED,\n        value: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: null,\n        recipeSteps: 0,\n        index: 0,\n      },\n      {\n        status: FULFILLED,\n        value: null,\n      },\n      {\n        status: REJECTED,\n        reason: null,\n        [FULFILLED]: null,\n        [REJECTED]: null,\n        currentRejection: true,\n        recipeSteps: 0,\n        index: 0,\n      },\n    ])\n  );\n  return void 0;\n}\n// getFulfilledResults_TEST_();\n"]}