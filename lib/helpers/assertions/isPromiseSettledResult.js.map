{"version":3,"file":"isPromiseSettledResult.js","sourceRoot":"","sources":["../../../src/helpers/assertions/isPromiseSettledResult.ts"],"names":[],"mappings":";;;AAAA,+CAAsD;AAEtD,cAAc;AACd,SAAgB,sBAAsB,CACpC,SAAc;IAEd,OAAO,CACL,wBAAwB,CAAI,SAAS,CAAC,IAAI,uBAAuB,CAAC,SAAS,CAAC,CAC7E,CAAC;AACJ,CAAC;AAND,wDAMC;AAED,cAAc;AACd,SAAgB,wBAAwB,CACtC,SAAc;IAEd,OAAO,SAAS,EAAE,MAAM,KAAK,qBAAS,IAAI,OAAO,IAAI,SAAS,CAAC;AACjE,CAAC;AAJD,4DAIC;AAED,cAAc;AACd,SAAgB,uBAAuB,CACrC,SAAc;IAEd,OAAO,SAAS,EAAE,MAAM,KAAK,oBAAQ,IAAI,QAAQ,IAAI,SAAS,CAAC;AACjE,CAAC;AAJD,0DAIC;AAED,gBAAgB;AACT,KAAK,UAAU,4BAA4B;IAChD,OAAO,CAAC,GAAG,CAAC,iBAAiB,UAAU,EAAE,CAAC,CAAC;IAC3C,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAE,MAAM,EAAE,qBAAS,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1E,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE,MAAM,EAAE,oBAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAEzE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE,MAAM,EAAE,qBAAS,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE,MAAM,EAAE,oBAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxE,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AARD,oEAQC;AACD,kCAAkC","sourcesContent":["import { FULFILLED, REJECTED } from '../../constants';\n\n/** @public */\nexport function isPromiseSettledResult<T>(\n  contender: any\n): contender is PromiseSettledResult<T> {\n  return (\n    isPromiseFulfilledResult<T>(contender) || isPromiseRejectedResult(contender)\n  );\n}\n\n/** @public */\nexport function isPromiseFulfilledResult<T>(\n  contender: any\n): contender is PromiseFulfilledResult<T> {\n  return contender?.status === FULFILLED && 'value' in contender;\n}\n\n/** @public */\nexport function isPromiseRejectedResult(\n  contender: any\n): contender is PromiseRejectedResult {\n  return contender?.status === REJECTED && 'reason' in contender;\n}\n\n/** @internal */\nexport async function isPromiseSettledResult_TEST_() {\n  console.log(`at: TEST from ${__filename}`);\n  console.log(isPromiseFulfilledResult({ status: FULFILLED, value: null }));\n  console.log(isPromiseRejectedResult({ status: REJECTED, reason: null }));\n\n  console.log(isPromiseSettledResult({ status: FULFILLED, value: null }));\n  console.log(isPromiseSettledResult({ status: REJECTED, reason: null }));\n  return void 0;\n}\n// isPromiseSettledResult_TEST_();\n"]}