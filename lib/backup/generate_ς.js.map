{"version":3,"file":"generate_ς.js","sourceRoot":"","sources":["../../src/backup/generate_ς.ts"],"names":[],"mappings":";;;AAAA,4CAAmD;AAGnD,kBAAkB;AAClB,QAAe,CAAC,CAAC,iBAAiB,CAChC,UAAuB,EACvB,SAAgC;IAEhC,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE;QAC7B,IAAI;YACF,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;YACpD,MAAM,EAAE,MAAM,EAAE,qBAAS,EAAE,KAAK,EAAE,CAAC;SACpC;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,EAAE,MAAM,EAAE,oBAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;SAC3C;KACF;AACH,CAAC;AAbD,8CAaC","sourcesContent":["import { FULFILLED, REJECTED } from '../constants';\nimport { Mapper } from '../types';\n\n/** @deprecated */\nexport function* generateMapping_ς<R, T>(\n  collection: Iterable<T>,\n  transform: Mapper<T, Promise<R>>\n): Generator<PromiseSettledResult<Promise<R>>, void, unknown> {\n  let i = 0;\n  for (const item of collection) {\n    try {\n      const value = transform(item, i++, [...collection]);\n      yield { status: FULFILLED, value };\n    } catch (error) {\n      yield { status: REJECTED, reason: error };\n    }\n  }\n}\n"]}