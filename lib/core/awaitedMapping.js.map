{"version":3,"file":"awaitedMapping.js","sourceRoot":"","sources":["../../src/core/awaitedMapping.ts"],"names":[],"mappings":";;;AAOA,kDAA+C;AAE/C,cAAc;AACP,KAAK,UAAU,cAAc,CAClC,UAAoC,EACpC,YAA+B,KAAK,EAAC,KAAK,EAAC,EAAE,CAAC,KAAiB,EAC/D,SAAyB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EACpC,WAA6B,KAAK,EAAC,CAAC,EAAC,EAAE,CAAC,KAAK,CAAC,EAC9C,YAAyB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;IAEpC,MAAM,MAAM,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CACxD,IAAA,mBAAQ,EAAC;QACP,IAAI;QACJ,KAAK;QACL,KAAK;QACL,SAAS;QACT,MAAM;QACN,QAAQ;QACR,SAAS;KACV,CAAC,CACH,CAAC;IAEF,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7B,CAAC;AApBD,wCAoBC;AAEM,KAAK,UAAU,oBAAoB;IACxC,OAAO,CAAC,GAAG,CAAC,iCAAiC,UAAU,EAAE,CAAC,CAAC;IAC3D,OAAO,CAAC,GAAG,CAAC,MAAM,cAAc,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAClD,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AAJD,oDAIC;AACD,0BAA0B;AAE1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG","sourcesContent":["import {\n  ErrLookupFn,\n  LookupFn,\n  Settled,\n  TransformFn,\n  ValidateFn,\n} from '../types';\nimport { fn_a1f9a } from './function/fn_a1f9a';\n\n/** @public */\nexport async function awaitedMapping<R, T>(\n  collection: Iterable<T | Settled<T>>,\n  transform: TransformFn<T, R> = async value => value as any as R,\n  lookup: LookupFn<T, R> = v => void v,\n  validate: ValidateFn<T, R> = async v => void v,\n  errLookup: ErrLookupFn = v => void v\n) {\n  const result = [...collection].map((item, index, array) =>\n    fn_a1f9a({\n      item,\n      index,\n      array,\n      transform,\n      lookup,\n      validate,\n      errLookup,\n    })\n  );\n\n  return Promise.all(result);\n}\n\nexport async function awaitedMapping_TEST_() {\n  console.log(`at: awaitedMapping_TEST_ from ${__filename}`);\n  console.log(await awaitedMapping([{ item: 10 }]));\n  return void 0;\n}\n// awaitedMapping_TEST_();\n\n/*\n\n\nexport async function serialMapping_Î±<T, R>(\n  collection: Iterable<T | Settled<T>>,\n  transform: TransformFn<T, R>,\n  lookup: LookupFn<R> = v => void v,\n  validate: ValidateFn<R> = async v => void v,\n  errLookup: ErrLookupFn = v => void v\n) {\n  let index = 0;\n  const results: (SettledLeft | SettledRight<R>)[] = [];\n  for (const item of collection) {\n    results.push(\n      await fn_a1f9a({\n        item,\n        index: index++,\n        transform,\n        lookup,\n        validate,\n        errLookup,\n      })\n    );\n  }\n  return results;\n}\n\n\n */\n"]}