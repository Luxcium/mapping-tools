{"version":3,"file":"MappingTools.js","sourceRoot":"","sources":["../../../src/core/class/MappingTools.ts"],"names":[],"mappings":";;;AAEA,MAAa,YAAY;IACf,YAAY,GAAsB,KAAK,EAAE,KAAQ,EAAE,EAAE,CAC3D,KAAiB,CAAC;IACZ,SAAS,GAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAC1D,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACrB,WAAW,GAAqB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CACpE,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACrB,YAAY,GAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,CACrE,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;IAExC,oCAAoC;IACpC,4BAA4B;IAC5B,IAAI;IACJ,kCAAkC;IAClC,yBAAyB;IACzB,IAAI;IACJ,sCAAsC;IACtC,2BAA2B;IAC3B,IAAI;IACJ,qCAAqC;IACrC,4BAA4B;IAC5B,IAAI;IAEJ,IAAI;QACF,IAAI,CAAC,YAAY,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC;QACf,IAAI,CAAC,WAAW,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC;IACpB,CAAC;CACF;AA7BD,oCA6BC","sourcesContent":["import { OnlySideEffect } from '../../types';\n\nexport class MappingTools<T, R> {\n  private transformFn_: TransformFn<T, R> = async (value: T) =>\n    value as any as R;\n  private lookupFn_: LookupFn<T, R> = (value, index, array) =>\n    void [value, index, array];\n  private validateFn_: ValidateFn<T, R> = async (value, index, array) =>\n    void [value, index, array];\n  private errLookupFn_: ErrLookupFn = (value, index, currentRejection) =>\n    void [value, index, currentRejection];\n\n  // transformFn(fn: TransformFn<T>) {\n  //   this.transformFn_ = fn;\n  // }\n  // set lookupFn(fn: LookupFn<T>) {\n  //   this.lookupFn_ = fn;\n  // }\n  // set validateFn(fn: ValidateFn<T>) {\n  //   this.validateFn_ = fn;\n  // }\n  // set errLookupFn(fn: ErrLookupFn) {\n  //   this.errLookupFn_ = fn;\n  // }\n\n  void() {\n    this.transformFn_;\n    this.lookupFn_;\n    this.validateFn_;\n    this.errLookupFn_;\n  }\n}\n\nexport interface TransformFn<T, U = unknown> {\n  (\n    value: T,\n    index: number,\n    array: readonly (T | PromiseSettledResult<T>)[]\n  ): Promise<U>;\n}\n/** @public */\nexport interface LookupFn<S, U = unknown> {\n  (\n    value: U,\n    index: number,\n    array: readonly (S | PromiseSettledResult<S>)[]\n  ): OnlySideEffect;\n}\n/** @public */\nexport interface ValidateFn<S, U = unknown> {\n  (\n    value: U,\n    index: number,\n    array: readonly (S | PromiseSettledResult<S>)[]\n  ): Promise<OnlySideEffect>;\n}\n/** @public  */\nexport interface ErrLookupFn {\n  /**\n   * @param  reason - The reason provided by the catch clause\n   * inside the mapping routine.\n   * @param index - The zero based index provided by map or\n   * similarly an index provided by the mapping routine.\n   * @param currentRejection - Flag that indicates if the exception\n   * was hapening on the curent iteration of the mapping routine or\n   * if it was part of a previously raised exception that was already\n   * part of the item currently being mapped from the ptovided collection.\n   * @returns Do not return any value is trigered syncrounously.\n   */\n  (reason: any, index: number, currentRejection: boolean): OnlySideEffect;\n}\n"]}