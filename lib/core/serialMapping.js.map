{"version":3,"file":"serialMapping.js","sourceRoot":"","sources":["../../src/core/serialMapping.ts"],"names":[],"mappings":";;;AASA,kDAA+C;AAE/C,cAAc;AACP,KAAK,UAAU,aAAa,CACjC,UAAoC,EACpC,YAA+B,KAAK,EAAC,KAAK,EAAC,EAAE,CAAC,KAAiB,EAC/D,SAAyB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EACpC,WAA6B,KAAK,EAAC,CAAC,EAAC,EAAE,CAAC,KAAK,CAAC,EAC9C,YAAyB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;IAEpC,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,MAAM,OAAO,GAAsC,EAAE,CAAC;IACtD,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE;QAC7B,OAAO,CAAC,IAAI,CACV,MAAM,IAAA,mBAAQ,EAAC;YACb,IAAI;YACJ,KAAK,EAAE,KAAK,EAAE;YACd,KAAK,EAAE,CAAC,GAAG,UAAU,CAAC;YACtB,SAAS;YACT,MAAM;YACN,QAAQ;YACR,SAAS;SACV,CAAC,CACH,CAAC;KACH;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAvBD,sCAuBC;AAWM,KAAK,UAAU,mBAAmB;IACvC,OAAO,CAAC,GAAG,CAAC,gCAAgC,UAAU,EAAE,CAAC,CAAC;IAC1D,OAAO,CAAC,GAAG,CAAC,MAAM,aAAa,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AAJD,kDAIC;AACD,yBAAyB","sourcesContent":["import {\n  ErrLookupFn,\n  LookupFn,\n  Settled,\n  SettledLeft,\n  SettledRight,\n  TransformFn,\n  ValidateFn,\n} from '../types';\nimport { fn_a1f9a } from './function/fn_a1f9a';\n\n/** @public */\nexport async function serialMapping<T, R>(\n  collection: Iterable<T | Settled<T>>,\n  transform: TransformFn<T, R> = async value => value as any as R,\n  lookup: LookupFn<T, R> = v => void v,\n  validate: ValidateFn<T, R> = async v => void v,\n  errLookup: ErrLookupFn = v => void v\n) {\n  let index = 0;\n  const results: (SettledLeft | SettledRight<R>)[] = [];\n  for (const item of collection) {\n    results.push(\n      await fn_a1f9a({\n        item,\n        index: index++,\n        array: [...collection],\n        transform,\n        lookup,\n        validate,\n        errLookup,\n      })\n    );\n  }\n  return results;\n}\n\ntype WrappedResult<U> = <W>(wraper: W) => Settled<U>;\nexport type MappingFn = <T, R>(\n  collection: Iterable<T | Settled<T>>,\n  transform: TransformFn<T, R>,\n  lookup: LookupFn<T, R>,\n  validate: ValidateFn<T, R>,\n  errLookup: ErrLookupFn\n) => WrappedResult<Settled<R>>;\n\nexport async function serialMapping_TEST_() {\n  console.log(`at: serialMapping_TEST_ from ${__filename}`);\n  console.log(await serialMapping([{ item: 10 }]));\n  return void 0;\n}\n// serialMapping_TEST_();\n"]}