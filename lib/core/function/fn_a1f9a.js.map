{"version":3,"file":"fn_a1f9a.js","sourceRoot":"","sources":["../../../src/core/function/fn_a1f9a.ts"],"names":[],"mappings":";;;AAAA,2CAA2C;AAE3C,2DAAwD;AACxD,mDAAgD;AAChD,MAAM,EACJ,wBAAwB,EACxB,uBAAuB,EACvB,sBAAsB,GACvB,GAAG,oBAAU,CAAC;AAEf,gBAAgB;AACT,KAAK,UAAU,QAAQ,CAAO,EACnC,IAAI,EACJ,KAAK,EACL,KAAK,EACL,SAAS,GAAG,KAAK,EAAC,KAAK,EAAC,EAAE,CAAC,KAAiB,EAC5C,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAC5D,QAAQ,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EACpE,SAAS,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,CAC7C,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,GACnB;IACpB,IAAI;QACF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,wBAAwB,CAAC,IAAI,CAAC,EAAE;YACnE,OAAO,IAAA,qCAAiB,EACtB,IAAI,EACJ,KAAK,EACL,KAAK,EACL,SAAS,EACT,MAAM,EACN,QAAQ,CACT,CAAC;SACH;QACD,IAAI,uBAAuB,CAAC,IAAI,CAAC,EAAE;YACjC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;YACxB,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAChC,OAAO,IAAA,6BAAa,EAAC,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;SAClE;QACD,MAAM,IAAI,SAAS,CACjB,gBAAgB,IAAI,qCAAqC,CAC1D,CAAC;KACH;IAAC,OAAO,MAAM,EAAE;QACf,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC/B,OAAO,IAAA,6BAAa,EAAC,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;KACjE;AACH,CAAC;AAjCD,4BAiCC;AAED,0BAA0B;AACnB,KAAK,UAAU,cAAc;IAClC,OAAO,CAAC,GAAG,CAAC,2BAA2B,UAAU,EAAE,CAAC,CAAC;IACrD,OAAO,CAAC,GAAG,CACT,MAAM,QAAQ,CAAC;QACb,IAAI,EAAE,EAAE;QACR,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,CAAC,EAAE,CAAC;QACX,SAAS,EAAE,KAAK,EAAC,IAAI,EAAC,EAAE,CAAC,IAAI,GAAG,EAAE;KACnC,CAAC,CACH,CAAC;IACF,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC;AAXD,wCAWC;AAED,mBAAmB","sourcesContent":["import { assertions } from '../../helpers';\nimport { MapperOptions } from '../../types';\nimport { fulfillementBlock } from './fulfillementBlock';\nimport { makeRejection } from './makeRejection';\nconst {\n  isPromiseFulfilledResult,\n  isPromiseRejectedResult,\n  isPromiseSettledResult,\n} = assertions;\n\n/** @internal */\nexport async function fn_a1f9a<T, R>({\n  item,\n  index,\n  array,\n  transform = async value => value as any as R,\n  lookup = (value, index, array) => void [value, index, array],\n  validate = async (value, index, array) => void [value, index, array],\n  errLookup = (value, index, currentRejection) =>\n    void [value, index, currentRejection],\n}: MapperOptions<T, R>) {\n  try {\n    if (!isPromiseSettledResult(item) || isPromiseFulfilledResult(item)) {\n      return fulfillementBlock<T, R>(\n        item,\n        index,\n        array,\n        transform,\n        lookup,\n        validate\n      );\n    }\n    if (isPromiseRejectedResult(item)) {\n      const { reason } = item;\n      errLookup(reason, index, false);\n      return makeRejection({ reason, index, currentRejection: false });\n    }\n    throw new TypeError(\n      `NEVER: item (${item}) is not assignable to type 'never'`\n    );\n  } catch (reason) {\n    errLookup(reason, index, true);\n    return makeRejection({ reason, index, currentRejection: true });\n  }\n}\n\n/* istanbul ignore next */\nexport async function fn_a1f9a_TEST_() {\n  console.log(`at: fn_a1f9a_TEST_ from ${__filename}`);\n  console.log(\n    await fn_a1f9a({\n      item: 10,\n      index: 0,\n      array: [10],\n      transform: async item => item * 10,\n    })\n  );\n  return void 0;\n}\n\n// fn_a1f9a_TEST_()\n"]}